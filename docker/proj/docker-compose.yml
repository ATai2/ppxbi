version: '3'
services:
  eureka:
    restart: always
    image: atai/ppx-eureka:v1
    container_name: eureka
    ports:
    - 8761:8761

#  admin:
#    restart: always
#    image: atai/ppx-admin:v1
#    container_name: ppxadmin
#    ports:
#    - 8910:8910
#    depends_on:
#    - euraka
#    environment:
#    - eureka.client.serviceUrl.defaultZone=http://eureka:8761/eureka/
#    - spring.application.name= ppx-admin
#
#  usermgt:
#    restart: always
#    image: atai/ppx-usermgt:v1
#    container_name: usermgt
#    ports:
#    - 8900:8900
#    depends_on:
#    - euraka
#    - mysql
#    environment:
#    - eureka.client.serviceUrl.defaultZone=http://eureka:8761/eureka/
#    - spring.application.name= ppx-usermgt
#    - spring.datasource.url=jdbc:mysql://mysql:3306/atdb?charset=utf8mb4&useSSL=false
#    - server.port=8900

#  activiti:
#      restart: always
#      image: atai/ppx-activiti:v1
#      container_name: ppxactiviti
#      ports:
#      - 8920:8920
#      depends_on:
#      - euraka
#      - mysql
#      environment:
#      - eureka.client.serviceUrl.defaultZone=http://eureka:8761/eureka/
#      - spring.application.name= ppx-activiti
#      - spring.datasource.url=jdbc:mysql://mysql:3306/atdb?charset=utf8mb4&useSSL=false


  mysql:
    image: mysql:5.7
    container_name: mysql
    ports:
    - "3306:3306"
    environment:
      MYSQL_DATABASE: atdb
      MYSQL_ROOT_PASSWORD: root
      MYSQL_ROOT_HOST: '%'
    restart: always

  redis:
    image: redis
    restart: always
    ports:
    - 6379:6379
    command: redis-server --requirepass root  --notify-keyspace-events Egl


  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.5.4
    container_name: elasticsearch
    environment:
    - discovery.type=single-node
    #    volumes:
    #    - ./esdata:/usr/share/elasticsearch/data
#    networks:
#    - efknet
    ports:
    - "9200:9200"

  kibana:
    image: docker.elastic.co/kibana/kibana-oss:6.5.4
    container_name: kibana
#    networks:
#    - efknet
    ports:
    - "5601:5601"

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
    - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    ports:
    - "9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 192.168.1.5
      KAFKA_CREATE_TOPICS: "test:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#    volumes:
#    - /var/run/docker.sock:/var/run/docker.sock


















#  mysql:
#    restart: always
#    image: mysql:5.7
#    container_name: mysql
#    ports:
#    - 3306:3306
#    environment:
#      TZ: Asia/Shanghai
#      MYSQL_ROOT_PASSWORD: root
#      MYSQL_DATABASE: atdb
#      MYSQL_ROOT_HOST: '%'
#    command:
#      --default-authentication-plugin=mysql_native_password
#      --character-set-server=utf8mb4
#      --collation-server=utf8mb4_general_ci
#      --explicit_defaults_for_timestamp=true
#      --lower_case_table_names=1
#      --max_allowed_packet=128M
#      --sql-mode="STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE,ERROR_FOR_DIVISION_BY_ZERO"


#networks:
#  efknet: